Index: quanlysinhvien/src/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/quanlysinhvien/src/Student.java b/quanlysinhvien/src/Student.java
new file mode 100644
--- /dev/null	(date 1663612215165)
+++ b/quanlysinhvien/src/Student.java	(date 1663612215165)
@@ -0,0 +1,87 @@
+public class Student {
+    //name (tên sinh viên), id (mã số sinh viên), group (lớp học), email (địa chỉ email).
+    //TODO: khai bao cac thuoc tinh cho Student
+    private String name;
+    private String id;
+    private String group;
+    private String email;
+
+
+
+    //Thêm các phương thức get/set cho các thuộc tính (gọi là getter/setter). Ví dụ, với thuộc tính “name”, hai phương thức cần thêm gồm “public String getName()” và “public void setName(String n)”.
+    //TODO: khai bao cac phuong thuc getter, setter cho Student
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public String getGroup() {
+        return group;
+    }
+
+    public void setGroup(String group) {
+        this.group = group;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public void setEmail(String email) {
+        this.email = email;
+    }
+
+    /*
+     * Constructor 1
+     */
+
+    Student() {
+        name = "Student";
+        id = "000";
+        group = "K62CB";
+        email = "uet@vnu.edu.vn";
+    }
+
+    /*
+     * Constructor 2
+     * @param n
+     * @param sid
+     * @param em
+     */
+    Student(String name, String id, String email) {
+        // TODO:
+        this.name = name;
+        this.id = id;
+        this.group = "K62CB";
+        this.email = email;
+    }
+
+    /*
+     * Constructor 3
+     * @param s
+     */
+    Student(Student s) {
+        this.name = s.name;
+        this.id = s.id;
+        this.email = s.email;
+        this.group = s.group;
+    }
+
+    String getInfo() {
+        // TODO:
+        System.out.printf("%s - %s - %s - %s",this.getGroup(),this.getName(),this.getId(),this.getGroup(),this.getEmail());
+        return null; // xoa dong nay sau khi cai dat
+    }
+}
\ No newline at end of file
Index: quanlysinhvien/quanlysinhvien.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/quanlysinhvien/quanlysinhvien.iml b/quanlysinhvien/quanlysinhvien.iml
new file mode 100644
--- /dev/null	(date 1663541587476)
+++ b/quanlysinhvien/quanlysinhvien.iml	(date 1663541587476)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: quanlysinhvien/src/StudentManagement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/quanlysinhvien/src/StudentManagement.java b/quanlysinhvien/src/StudentManagement.java
new file mode 100644
--- /dev/null	(date 1663660132369)
+++ b/quanlysinhvien/src/StudentManagement.java	(date 1663660132369)
@@ -0,0 +1,84 @@
+public class StudentManagement {
+
+    // TODO: khai bao thuoc tinh students la array chua cac doi tuong thuoc lop Student (max. 100)
+    Student[] students = new Student[100];
+
+    public static boolean sameGroup(Student s1, Student s2) {
+        // TODO:
+        return s1.getGroup().equals(s2.getGroup()); // xoa dong nay sau khi cai dat
+    }
+
+    public void addStudent(Student newStudent){
+        // TODO:
+        /*if(students.length == (int)null)   students[0] = newStudent;
+        else*/      students[students.length] = newStudent;
+    }
+
+    public String studentsByGroup() {
+        boolean[] flag = new boolean[students.length];
+        for(int i=0;i<students.length;i++) {
+            if(!flag[i]){
+                flag[i]=true;
+                System.out.printf("%s\n%s - %s - %s - %s\n",students[i].getGroup(),students[i].getName(),students[i].getId(),students[i].getGroup(),students[i].getEmail());
+            }
+            for(int j=1;j<students.length;j++){
+                if(sameGroup(students[i],students[j])){
+                    if(!flag[j]){
+                        System.out.printf("%s - %s - %s - %s\n",students[j].getName(),students[j].getId(),students[j].getGroup(),students[j].getEmail());
+                        flag[j]=true;
+                    }
+                }
+            }
+        }
+        return null;
+    }
+
+    public void removeStudent(String id) {
+        // TODO:
+        for(int i=0;i<students.length;i++){
+            if(students[i].getId().equals(id)){
+                for(int j=i;j<students.length;j++){
+                    students[j]=students[j+1];
+                }
+            }
+        }
+    }
+
+    public static void main(String[] args) {
+        // TODO:
+        Student a = new Student();
+        a.setName("Nguyen Van An");
+        a.setId("17020001");
+        a.setGroup("K62CC");
+        a.setEmail("1702001@vnu.edu.vn");
+        Student a1 = new Student();
+        a1.setName("Nguyen Van B");
+        a1.setId("17020002");
+        a1.setGroup("K62CC");
+        a1.setEmail("1702002@vnu.edu.vn");
+        Student a2 = new Student();
+        a2.setName("Nguyen Van C");
+        a2.setId("17020003");
+        a2.setGroup("K62CB");
+        a2.setEmail("1702003@vnu.edu.vn");
+        Student a3 = new Student();
+        a3.setName("Nguyen Van D");
+        a3.setId("17020004");
+        a3.setGroup("K62CB");
+        a3.setEmail("1702004@vnu.edu.vn");
+        StudentManagement s = new StudentManagement();
+        System.out.println(s.students.length);
+        s.addStudent(a);
+        s.addStudent(a1);
+        s.addStudent(a2);
+        s.addStudent(a3);
+        /*
+        Nguyen Van An - 17020001 – K62CC – 17020001@vnu.edu.vn
+
+        Nguyen Van B - 17020002 – K62CC – 17020002@vnu.edu.vn
+        K62CB
+        Nguyen Van C - 17020003 – K62CB – 17020003@vnu.edu.vn
+        Nguyen Van D - 17020004 – K62CB – 17020004@vnu.edu.vn
+        */
+    }
+}
\ No newline at end of file
Index: tictactoe/src/Cell.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tictactoe/src/Cell.java b/tictactoe/src/Cell.java
new file mode 100644
--- /dev/null	(date 1663091708571)
+++ b/tictactoe/src/Cell.java	(date 1663091708571)
@@ -0,0 +1,3 @@
+public class Cell {
+    int a;
+}
Index: tictactoe/src/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tictactoe/src/Game.java b/tictactoe/src/Game.java
new file mode 100644
--- /dev/null	(date 1663093759268)
+++ b/tictactoe/src/Game.java	(date 1663093759268)
@@ -0,0 +1,34 @@
+public class Game {
+
+    enum GameState {WIN, DRAW, CONTINUE}
+
+    enum CellState {X, O, EMPTY}
+
+    System.out.println("Hello world!");
+    System.out.println("Hello world!");
+    public int checkWin() {
+        updateMatrix();
+        if (a[0] != 2 && a[0] == a[1] && a[1] == a[2])
+            return a[0];
+        if (a[3] != 2 && a[3] == a[4] && a[4] == a[5])
+            return a[3];
+        if (a[6] != 2 && a[6] == a[7] && a[7] == a[8])
+            return a[6];
+
+        if (a[0] != 2 && a[0] == a[3] && a[3] == a[6])
+            return a[0];
+        if (a[1] != 2 && a[1] == a[4] && a[4] == a[7])
+            return a[1];
+        if (a[2] != 2 && a[2] == a[5] && a[5] == a[8])
+            return a[2];
+
+        if (a[0] != 2 && a[0] == a[4] && a[4] == a[8])
+            return a[0];
+        if (a[2] != 2 && a[2] == a[4] && a[4] == a[6])
+            return a[2];
+        for (int i = 0; i < 9; i++)
+            if (a[i] == 2)
+                return -1;
+        return 2;
+    }
+}
Index: tictactoe/src/Board.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tictactoe/src/Board.java b/tictactoe/src/Board.java
new file mode 100644
--- /dev/null	(date 1663091708558)
+++ b/tictactoe/src/Board.java	(date 1663091708558)
@@ -0,0 +1,3 @@
+public class Board {
+    int a[9];
+}
Index: Abstract/src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Abstract/src/Main.java b/Abstract/src/Main.java
new file mode 100644
--- /dev/null	(date 1663896382744)
+++ b/Abstract/src/Main.java	(date 1663896382744)
@@ -0,0 +1,5 @@
+public class Main {
+    public static void main(String[] args) {
+        System.out.println("Hello world!");
+    }
+}
\ No newline at end of file
Index: Abstract/src/Car.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Abstract/src/Car.java b/Abstract/src/Car.java
new file mode 100644
--- /dev/null	(date 1663897784809)
+++ b/Abstract/src/Car.java	(date 1663897784809)
@@ -0,0 +1,6 @@
+import java.util.List;
+
+public class Car {
+    int numberOfDoors;
+
+}
Index: Abstract/src/Vehicle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Abstract/src/Vehicle.java b/Abstract/src/Vehicle.java
new file mode 100644
--- /dev/null	(date 1663897151051)
+++ b/Abstract/src/Vehicle.java	(date 1663897151051)
@@ -0,0 +1,49 @@
+public class Vehicle {
+
+    String brand;
+    String model;
+    String registrationNumber;
+    Person owner;
+
+    Vehicle(String brand, String model, String registrationNumber, Person owner){
+        //
+    }
+    String getInfo(){
+        //
+    }
+    void tranferOwnership(Person newOwer){
+
+    }
+
+    public String getBrand() {
+        return brand;
+    }
+
+    public void setBrand(String brand) {
+        this.brand = brand;
+    }
+
+    public String getModel() {
+        return model;
+    }
+
+    public void setModel(String model) {
+        this.model = model;
+    }
+
+    public String getRegistrationNumber() {
+        return registrationNumber;
+    }
+
+    public void setRegistrationNumber(String registrationNumber) {
+        this.registrationNumber = registrationNumber;
+    }
+
+    public Person getOwner() {
+        return owner;
+    }
+
+    public void setOwner(Person owner) {
+        this.owner = owner;
+    }
+}
Index: Abstract/src/Person.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Abstract/src/Person.java b/Abstract/src/Person.java
new file mode 100644
--- /dev/null	(date 1663897732808)
+++ b/Abstract/src/Person.java	(date 1663897732808)
@@ -0,0 +1,37 @@
+import java.util.List;
+
+public class Person {
+
+    String name;
+    String address;
+    List<Vehicle> vehiclesList;
+
+    Person(String name, String address){
+        //
+    }
+    void addVehicle(Vehicle vehicle){
+        //
+    }
+    void removeVehicle(String registratonNumber){
+        //
+    }
+    String getVehicleInfo(){
+        //
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getAddress() {
+        return address;
+    }
+
+    public void setAddress(String address) {
+        this.address = address;
+    }
+}
Index: Abstract/src/MotorBike.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Abstract/src/MotorBike.java b/Abstract/src/MotorBike.java
new file mode 100644
--- /dev/null	(date 1663897732779)
+++ b/Abstract/src/MotorBike.java	(date 1663897732779)
@@ -0,0 +1,3 @@
+public class MotorBike {
+
+}
Index: Abstract/Abstract.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Abstract/Abstract.iml b/Abstract/Abstract.iml
new file mode 100644
--- /dev/null	(date 1664525797562)
+++ b/Abstract/Abstract.iml	(date 1664525797562)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="CheckStyle-IDEA-Module" serialisationVersion="2">
+    <option name="activeLocationsIds" />
+  </component>
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: Transaction/Transaction.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Transaction/Transaction.iml b/Transaction/Transaction.iml
new file mode 100644
--- /dev/null	(date 1664525797584)
+++ b/Transaction/Transaction.iml	(date 1664525797584)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: Transaction/src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Transaction/src/Main.java b/Transaction/src/Main.java
new file mode 100644
--- /dev/null	(date 1664525784750)
+++ b/Transaction/src/Main.java	(date 1664525784750)
@@ -0,0 +1,5 @@
+public class Main {
+    public static void main(String[] args) {
+        System.out.println("Hello world!");
+    }
+}
\ No newline at end of file
Index: Transaction/src/Transaction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Transaction/src/Transaction.java b/Transaction/src/Transaction.java
new file mode 100644
--- /dev/null	(date 1664535471150)
+++ b/Transaction/src/Transaction.java	(date 1664535471150)
@@ -0,0 +1,38 @@
+public class Transaction {
+    private String operation;
+    private double amount;
+    private double balance;
+    public static String  DEPOSIT;
+    //
+    public final String WITHDRAW;
+    //
+    public void Transaction(String operation, double amount, double balance) {
+        this.operation = operation;
+        this.amount = amount;
+        this.balance = balance;
+    }
+
+    public String getOperation() {
+        return operation;
+    }
+
+    public void setOperation(String operation) {
+        this.operation = operation;
+    }
+
+    public double getAmount() {
+        return amount;
+    }
+
+    public void setAmount(double amount) {
+        this.amount = amount;
+    }
+
+    public double getBalance() {
+        return balance;
+    }
+
+    public void setBalance(double balance) {
+        this.balance = balance;
+    }
+}
Index: ucln/src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ucln/src/Main.java b/ucln/src/Main.java
new file mode 100644
--- /dev/null	(date 1664085974886)
+++ b/ucln/src/Main.java	(date 1664085974886)
@@ -0,0 +1,6 @@
+public class Main {
+    public static void main(String[] args) {
+        Solution a = new Solution();
+        System.out.print(a.gcd(40,10));
+    }
+}
\ No newline at end of file
Index: ucln/ucln.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ucln/ucln.iml b/ucln/ucln.iml
new file mode 100644
--- /dev/null	(date 1664085400681)
+++ b/ucln/ucln.iml	(date 1664085400681)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: ucln/src/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ucln/src/Solution.java b/ucln/src/Solution.java
new file mode 100644
--- /dev/null	(date 1664121227790)
+++ b/ucln/src/Solution.java	(date 1664121227790)
@@ -0,0 +1,15 @@
+public class Solution {
+    int gcd(int a, int b) {
+        if (a < 0) {
+            a = a * (-1);
+        }
+        if (b < 0) {
+            b = b * (-1);
+        }
+        if (b == 0) {
+            return a;
+        }
+        return gcd(b, a % b);
+    }
+}
+ 
\ No newline at end of file
Index: .idea/google-java-format.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/google-java-format.xml b/.idea/google-java-format.xml
new file mode 100644
--- /dev/null	(date 1664085400756)
+++ b/.idea/google-java-format.xml	(date 1664085400756)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GoogleJavaFormatSettings">
+    <option name="enabled" value="false" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/checkstyle-idea.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/checkstyle-idea.xml b/.idea/checkstyle-idea.xml
new file mode 100644
--- /dev/null	(date 1664085400704)
+++ b/.idea/checkstyle-idea.xml	(date 1664085400704)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CheckStyle-IDEA" serialisationVersion="2">
+    <checkstyleVersion>10.3.2</checkstyleVersion>
+    <scanScope>JavaOnly</scanScope>
+    <copyLibs>true</copyLibs>
+    <option name="thirdPartyClasspath" />
+    <option name="activeLocationIds" />
+    <option name="locations">
+      <list>
+        <ConfigurationLocation id="bundled-sun-checks" type="BUNDLED" scope="All" description="Sun Checks">(bundled)</ConfigurationLocation>
+        <ConfigurationLocation id="bundled-google-checks" type="BUNDLED" scope="All" description="Google Checks">(bundled)</ConfigurationLocation>
+      </list>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectModuleManager\">\r\n    <modules>\r\n      <module fileurl=\"file://$PROJECT_DIR$/.idea/oopuet.iml\" filepath=\"$PROJECT_DIR$/.idea/oopuet.iml\" />\r\n    </modules>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
--- a/.idea/modules.xml	(revision 18a1e315360fc3f9fe47b5bbfa2d793f503da782)
+++ b/.idea/modules.xml	(date 1664525797597)
@@ -2,7 +2,14 @@
 <project version="4">
   <component name="ProjectModuleManager">
     <modules>
+      <module fileurl="file://$PROJECT_DIR$/Abstract/Abstract.iml" filepath="$PROJECT_DIR$/Abstract/Abstract.iml" />
+      <module fileurl="file://$PROJECT_DIR$/Transaction/Transaction.iml" filepath="$PROJECT_DIR$/Transaction/Transaction.iml" />
+      <module fileurl="file://$PROJECT_DIR$/fibonacci/fibonacci.iml" filepath="$PROJECT_DIR$/fibonacci/fibonacci.iml" />
       <module fileurl="file://$PROJECT_DIR$/.idea/oopuet.iml" filepath="$PROJECT_DIR$/.idea/oopuet.iml" />
+      <module fileurl="file://$PROJECT_DIR$/phanso/phanso.iml" filepath="$PROJECT_DIR$/phanso/phanso.iml" />
+      <module fileurl="file://$PROJECT_DIR$/quanlysinhvien/quanlysinhvien.iml" filepath="$PROJECT_DIR$/quanlysinhvien/quanlysinhvien.iml" />
+      <module fileurl="file://$PROJECT_DIR$/tictactoe/tictactoe.iml" filepath="$PROJECT_DIR$/tictactoe/tictactoe.iml" />
+      <module fileurl="file://$PROJECT_DIR$/ucln/ucln.iml" filepath="$PROJECT_DIR$/ucln/ucln.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"4c264d5e-5204-427f-b2f6-21598006b045\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2EZWQSMSCnUAChXMJuiFqttTDVX\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"4c264d5e-5204-427f-b2f6-21598006b045\" name=\"Changes\" comment=\"\" />\r\n      <created>1662803575051</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1662803575051</updated>\r\n      <workItem from=\"1662803578770\" duration=\"371000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 18a1e315360fc3f9fe47b5bbfa2d793f503da782)
+++ b/.idea/workspace.xml	(date 1664535471411)
@@ -4,7 +4,38 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="4c264d5e-5204-427f-b2f6-21598006b045" name="Changes" comment="" />
+    <list default="true" id="4c264d5e-5204-427f-b2f6-21598006b045" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/.idea/checkstyle-idea.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/google-java-format.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Abstract/Abstract.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Abstract/src/Car.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Abstract/src/Main.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Abstract/src/MotorBike.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Abstract/src/Person.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Abstract/src/Vehicle.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Transaction/Transaction.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Transaction/src/Main.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/Transaction/src/Transaction.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/fibonacci/fibonacci.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/fibonacci/src/Main.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/fibonacci/src/Solution.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/phanso/phanso.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/phanso/src/Main.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/phanso/src/Solution.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/quanlysinhvien/quanlysinhvien.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/quanlysinhvien/src/Student.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/quanlysinhvien/src/StudentManagement.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/tictactoe/src/Board.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/tictactoe/src/Cell.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/tictactoe/src/Game.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/tictactoe/src/Main.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/tictactoe/tictactoe.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/ucln/src/Main.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/ucln/src/Solution.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/ucln/ucln.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -18,10 +49,19 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="PUSH_TAGS">
+      <GitPushTagMode>
+        <option name="argument" value="--tags" />
+        <option name="title" value="All" />
+      </GitPushTagMode>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProblemsViewState">
+    <option name="selectedTabId" value="CurrentFile" />
   </component>
   <component name="ProjectId" id="2EZWQSMSCnUAChXMJuiFqttTDVX" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
@@ -33,11 +73,19 @@
   "keyToString": {
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
     "WebServerToolWindowFactoryState": "false",
+    "jdk.selected.JAVA_MODULE": "18",
+    "last_opened_file_path": "C:/Users/admin/Documents/oopuet",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)"
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.0",
+    "settings.editor.selected.configurable": "preferences.pluginManager"
   }
 }]]></component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
@@ -49,6 +97,17 @@
       <option name="presentableId" value="Default" />
       <updated>1662803575051</updated>
       <workItem from="1662803578770" duration="371000" />
+      <workItem from="1662804127603" duration="663000" />
+      <workItem from="1662949564332" duration="594000" />
+      <workItem from="1663087906868" duration="887000" />
+      <workItem from="1663090385340" duration="3198000" />
+      <workItem from="1663541525473" duration="2985000" />
+      <workItem from="1663589476885" duration="21871000" />
+      <workItem from="1663895139407" duration="2622000" />
+      <workItem from="1664085219067" duration="22220000" />
+      <workItem from="1664277387340" duration="1106000" />
+      <workItem from="1664278983003" duration="369000" />
+      <workItem from="1664524277795" duration="6861000" />
     </task>
     <servers />
   </component>
@@ -66,4 +125,7 @@
       </map>
     </option>
   </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/oopuet$Main.ic" NAME="Main Coverage Results" MODIFIED="1664121175099" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+  </component>
 </project>
\ No newline at end of file
Index: phanso/src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/phanso/src/Main.java b/phanso/src/Main.java
new file mode 100644
--- /dev/null	(date 1664091264716)
+++ b/phanso/src/Main.java	(date 1664091264716)
@@ -0,0 +1,5 @@
+public class Main {
+    public static void main(String[] args) {
+        System.out.println("Hello world!");
+    }
+}
\ No newline at end of file
Index: phanso/phanso.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/phanso/phanso.iml b/phanso/phanso.iml
new file mode 100644
--- /dev/null	(date 1664091333461)
+++ b/phanso/phanso.iml	(date 1664091333461)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: phanso/src/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/phanso/src/Solution.java b/phanso/src/Solution.java
new file mode 100644
--- /dev/null	(date 1664101968247)
+++ b/phanso/src/Solution.java	(date 1664101968247)
@@ -0,0 +1,78 @@
+public class Solution {
+    private int numerator;
+    private int denominator;
+
+    public int getNumerator() {
+        return numerator;
+    }
+
+    public void setNumerator(int numerator) {
+        this.numerator = numerator;
+    }
+
+    public int getDenominator() {
+        return denominator;
+    }
+
+    public void setDenominator(int denominator) {
+        this.denominator = denominator;
+    }
+    public void Solution() {
+
+    }
+    public Solution(int numerator, int denominator) {
+        // Chúng ta khởi tạo gì đó sau
+        super();
+        this.setDenominator(denominator);
+        this.setNumerator(numerator);
+    }
+
+    public Solution reduce() {
+        Solution a = new Solution();
+        int i = timUSCLN(this.getNumerator(), this.getDenominator());
+        this.setNumerator(this.getDenominator() / i);
+        this.setDenominator(this.getNumerator() / i);
+        a.setNumerator(this.getNumerator());
+        a.setDenominator(this.getDenominator());
+        return a;
+    }
+
+    public int timUSCLN(int a, int b) {
+        while (a != b) {
+            if (a > b) {
+                a -= b;
+            } else {
+                b -= a;
+            }
+        }
+        return a;
+    }
+
+    public void add(Solution ps) {
+        int ts = this.getNumerator() * ps.getDenominator() + ps.getNumerator() * this.getDenominator();
+        int ms = this.getDenominator() * ps.getDenominator();
+        Solution s = new Solution(ts, ms);
+        s.reduce();
+    }
+
+    public void subtract(Solution ps) {
+        int ts = this.getNumerator() * ps.getDenominator() - ps.getNumerator() * this.getDenominator();
+        int ms = this.getDenominator() * ps.getDenominator();
+        Solution s = new Solution(ts, ms);
+        s.reduce();
+    }
+
+    public void multiply(Solution ps) {
+        int ts = this.getNumerator() * ps.getNumerator();
+        int ms = this.getDenominator() * ps.getDenominator();
+        Solution s = new Solution(ts, ms);
+        s.reduce();
+    }
+
+    public void divide(Solution ps) {
+        int ts = this.getNumerator() * ps.getDenominator();
+        int ms = this.getDenominator() * ps.getNumerator();
+        Solution s = new Solution(ts, ms);
+        s.reduce();
+    }
+}
Index: fibonacci/src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/fibonacci/src/Main.java b/fibonacci/src/Main.java
new file mode 100644
--- /dev/null	(date 1664120846382)
+++ b/fibonacci/src/Main.java	(date 1664120846382)
@@ -0,0 +1,8 @@
+public class Main {
+    public static void main(String[] args) {
+        Solution a = new Solution();
+        System.out.println(a.fibonacci(93));
+        System.out.println(Long.MAX_VALUE);
+
+    }
+}
\ No newline at end of file
Index: fibonacci/fibonacci.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/fibonacci/fibonacci.iml b/fibonacci/fibonacci.iml
new file mode 100644
--- /dev/null	(date 1664107885636)
+++ b/fibonacci/fibonacci.iml	(date 1664107885636)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: fibonacci/src/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/fibonacci/src/Solution.java b/fibonacci/src/Solution.java
new file mode 100644
--- /dev/null	(date 1664120396363)
+++ b/fibonacci/src/Solution.java	(date 1664120396363)
@@ -0,0 +1,25 @@
+// Import your library
+// Do not change the name of the Solution class
+public class Solution {
+    // Type your main code here
+    public static long fibonacci(long n) {
+        if ((long) n > 92) {
+            return Long.MAX_VALUE;
+        } else if ((long) n < 0 && (long) n > 100) {
+            return (long) -1;
+        } else if ((long) n == 0) {
+            return (long) 0;
+        } else if ((long) n == 1 || (long) n == 2) {
+            return (long) 1;
+        } else {
+            long[] a = new long[100];
+            a[0] = 0;
+            a[1] = 1;
+            a[2] = 1;
+            for (int i = 3; i <= (int) n; i++) {
+                a[i] = a[i - 1] + a[i - 2];
+            }
+            return a[(int) n];
+        }
+    }
+}
\ No newline at end of file
Index: tictactoe/tictactoe.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tictactoe/tictactoe.iml b/tictactoe/tictactoe.iml
new file mode 100644
--- /dev/null	(date 1663090789316)
+++ b/tictactoe/tictactoe.iml	(date 1663090789316)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: tictactoe/src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tictactoe/src/Main.java b/tictactoe/src/Main.java
new file mode 100644
--- /dev/null	(date 1663090748420)
+++ b/tictactoe/src/Main.java	(date 1663090748420)
@@ -0,0 +1,5 @@
+public class Main {
+    public static void main(String[] args) {
+        System.out.println("Hello world!");
+    }
+}
\ No newline at end of file
